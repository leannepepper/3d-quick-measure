{"version":3,"file":"index.js","sources":["../src/measureUtils.tsx","../src/Measure.tsx","../src/contexts.ts","../src/Hover.tsx","../src/QuickMeasure.tsx"],"sourcesContent":["import * as THREE from \"three\";\nimport * as React from \"react\";\n\nexport const quickMeasureTheme = {\n  colors: {\n    mainAxis: \"#41a5f5\",\n    crossAxis: \"#f17720\",\n  },\n};\n\nexport function getMidPoint(points: THREE.Vector3[]) {\n  const midPoint = new THREE.Vector3();\n  midPoint.x = (points[1].x + points[0].x) / 2;\n  midPoint.y = (points[1].y + points[0].y) / 2;\n  midPoint.z = (points[1].z + points[0].z) / 2;\n  return midPoint;\n}\n\nexport function getBoundingBox(multiSelected: any[]): THREE.Box3 {\n  const boundingBox = new THREE.Box3();\n  const group = new THREE.Group();\n  const clones: any[] = [];\n\n  multiSelected.forEach((obj3D: THREE.Mesh) => {\n    const clone = obj3D.clone();\n    clones.push(clone);\n  });\n\n  group.add(...clones);\n  boundingBox.setFromObject(group);\n  return boundingBox;\n}\n\nexport function MultiObjectBoundingBox({ ...props }) {\n  const { multiSelected } = props;\n  if (multiSelected.length < 2) {\n    return null;\n  }\n  const boundingBox = getBoundingBox(multiSelected);\n\n  return (\n    <box3Helper\n      box={boundingBox}\n      args={[boundingBox, new THREE.Color(0xffffff)]}\n    />\n  );\n}\n","import { Html, Line } from \"@react-three/drei\";\nimport * as React from \"react\";\nimport * as THREE from \"three\";\nimport type { Measure } from \"./QuickMeasure\";\nimport { getBoundingBox, getMidPoint, quickMeasureTheme } from \"./measureUtils\";\n\ntype Axis = \"x\" | \"y\" | \"z\";\n\nfunction getClosestMainAxisPoint(\n  selected: THREE.Mesh[],\n  hovered: THREE.Mesh[],\n  selectedBoundingBox: THREE.Box3,\n  hoveredBoundingBox: THREE.Box3,\n  axis: Axis\n) {\n  if (selected[0].position[axis] > hovered[0].position[axis]) {\n    return [hoveredBoundingBox.max[axis], selectedBoundingBox.max[axis]];\n  } else if (selected[0].position[axis] < hovered[0].position[axis]) {\n    return [hoveredBoundingBox.min[axis], selectedBoundingBox.min[axis]];\n  } else {\n    return [hoveredBoundingBox.max[axis], selectedBoundingBox.max[axis]];\n  }\n}\n\nfunction getClosestPointToSelected(\n  multiSelectBoundingBox: THREE.Box3,\n  hoveredBoundingBox: THREE.Box3,\n  axis: Axis\n): number {\n  const goal = multiSelectBoundingBox.min[axis];\n  const closestPoint = [\n    hoveredBoundingBox.min[axis],\n    hoveredBoundingBox.max[axis],\n  ].reduce(function (prev, curr) {\n    return Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev;\n  });\n  return closestPoint;\n}\n\nfunction getCrossAxisEndPoint(\n  selected: THREE.Mesh[],\n  hovered: THREE.Mesh[],\n  multiSelectBoundingBox: THREE.Box3,\n  axis: Axis\n) {\n  if (selected[0].position[axis] > hovered[0].position[axis]) {\n    return multiSelectBoundingBox.min[axis];\n  } else if (selected[0].position[axis] < hovered[0].position[axis]) {\n    return multiSelectBoundingBox.max[axis];\n  } else {\n    return multiSelectBoundingBox.min[axis];\n  }\n}\n\nexport function Measurements(props: Measure): null | JSX.Element {\n  const { hovered, selected } = props;\n\n  if (selected.length === 0 || hovered.length === 0) {\n    return null;\n  }\n\n  const multiSelectBoundingBox = getBoundingBox(selected);\n  hovered[0].geometry.computeBoundingBox();\n  const hoveredBoundingBox = hovered[0].geometry.boundingBox.clone();\n  hoveredBoundingBox.applyMatrix4(hovered[0].matrixWorld);\n\n  const [mainXStart, mainXEnd] = getClosestMainAxisPoint(\n    selected,\n    hovered,\n    multiSelectBoundingBox,\n    hoveredBoundingBox,\n    \"x\"\n  );\n\n  const [mainYStart, mainYEnd] = getClosestMainAxisPoint(\n    selected,\n    hovered,\n    multiSelectBoundingBox,\n    hoveredBoundingBox,\n    \"y\"\n  );\n\n  const [mainZStart, mainZEnd] = getClosestMainAxisPoint(\n    selected,\n    hovered,\n    multiSelectBoundingBox,\n    hoveredBoundingBox,\n    \"z\"\n  );\n\n  const mainX = [\n    new THREE.Vector3(\n      mainXStart,\n      getClosestPointToSelected(\n        multiSelectBoundingBox,\n        hoveredBoundingBox,\n        \"y\"\n      ),\n      hoveredBoundingBox.max.z\n    ),\n    new THREE.Vector3(\n      mainXEnd,\n      getClosestPointToSelected(\n        multiSelectBoundingBox,\n        hoveredBoundingBox,\n        \"y\"\n      ),\n      hoveredBoundingBox.max.z\n    ),\n  ];\n\n  const mainY = [\n    new THREE.Vector3(\n      getClosestPointToSelected(\n        multiSelectBoundingBox,\n        hoveredBoundingBox,\n        \"x\"\n      ),\n      mainYStart,\n      hoveredBoundingBox.max.z\n    ),\n    new THREE.Vector3(\n      getClosestPointToSelected(\n        multiSelectBoundingBox,\n        hoveredBoundingBox,\n        \"x\"\n      ),\n      mainYEnd,\n      hoveredBoundingBox.max.z\n    ),\n  ];\n\n  const mainZ = [\n    new THREE.Vector3(\n      getClosestPointToSelected(\n        multiSelectBoundingBox,\n        hoveredBoundingBox,\n        \"x\"\n      ),\n      getClosestPointToSelected(\n        multiSelectBoundingBox,\n        hoveredBoundingBox,\n        \"y\"\n      ),\n      mainZStart\n    ),\n    new THREE.Vector3(\n      getClosestPointToSelected(\n        multiSelectBoundingBox,\n        hoveredBoundingBox,\n        \"x\"\n      ),\n      getClosestPointToSelected(\n        multiSelectBoundingBox,\n        hoveredBoundingBox,\n        \"y\"\n      ),\n      mainZEnd\n    ),\n  ];\n\n  const crossX = [\n    new THREE.Vector3(\n      getClosestPointToSelected(\n        multiSelectBoundingBox,\n        hoveredBoundingBox,\n        \"x\"\n      ),\n      getMidPoint([multiSelectBoundingBox.min, multiSelectBoundingBox.max]).y,\n      hoveredBoundingBox.max.z\n    ),\n    new THREE.Vector3(\n      getCrossAxisEndPoint(selected, hovered, multiSelectBoundingBox, \"x\"),\n      getMidPoint([multiSelectBoundingBox.min, multiSelectBoundingBox.max]).y,\n      hoveredBoundingBox.max.z\n    ),\n  ];\n  const crossY = [\n    new THREE.Vector3(\n      getMidPoint([multiSelectBoundingBox.min, multiSelectBoundingBox.max]).x,\n      getClosestPointToSelected(\n        multiSelectBoundingBox,\n        hoveredBoundingBox,\n        \"y\"\n      ),\n      hoveredBoundingBox.max.z\n    ),\n    new THREE.Vector3(\n      getMidPoint([multiSelectBoundingBox.min, multiSelectBoundingBox.max]).x,\n      getCrossAxisEndPoint(selected, hovered, multiSelectBoundingBox, \"y\"),\n      hoveredBoundingBox.max.z\n    ),\n  ];\n\n  return (\n    <>\n      <Line\n        points={mainX}\n        color={quickMeasureTheme.colors.mainAxis}\n        lineWidth={1.0}\n        dashed={true}\n        dashScale={10.0}\n        alphaWrite={undefined}\n      />\n      <Line\n        points={mainY}\n        color={quickMeasureTheme.colors.mainAxis}\n        lineWidth={1.0}\n        dashed={true}\n        dashScale={10.0}\n        alphaWrite={undefined}\n      />\n      <Line\n        points={mainZ}\n        color={quickMeasureTheme.colors.mainAxis}\n        lineWidth={1.0}\n        dashed={true}\n        dashScale={10.0}\n        alphaWrite={undefined}\n      >\n        <group position={getMidPoint(mainZ)}>\n          <Html\n            as=\"div\"\n            wrapperClass=\"measure-text\"\n            zIndexRange={[100, 0]}\n            center\n            transform={false}\n            sprite={true}\n          >\n            <p>{Math.round(Math.abs(mainZ[0].z - mainZ[1].z))}</p>\n          </Html>\n        </group>\n      </Line>\n      <Line\n        points={crossX}\n        color={quickMeasureTheme.colors.crossAxis}\n        lineWidth={1.0}\n        alphaWrite={undefined}\n      >\n        <group position={getMidPoint(crossX)}>\n          <Html\n            as=\"div\"\n            wrapperClass=\"measure-text\"\n            zIndexRange={[100, 0]}\n            center\n            transform={false}\n            sprite={true}\n          >\n            <p>{Math.round(Math.abs(crossX[0].x - crossX[1].x))}</p>\n          </Html>\n        </group>\n      </Line>\n      <Line\n        points={crossY}\n        color={quickMeasureTheme.colors.crossAxis}\n        lineWidth={1.0}\n        alphaWrite={undefined}\n      >\n        <group position={getMidPoint(crossY)}>\n          <Html\n            as=\"div\"\n            wrapperClass=\"measure-text\"\n            zIndexRange={[100, 0]}\n            center\n            transform={false}\n            sprite={true}\n          >\n            <p>{Math.round(Math.abs(crossY[0].y - crossY[1].y))}</p>\n          </Html>\n        </group>\n      </Line>\n    </>\n  );\n}\n","import * as React from \"react\";\n\nexport const hoverContext = React.createContext(null);\n\nexport const selectContext = React.createContext(null);\n","import * as React from \"react\";\nimport { useCallback, useContext } from \"react\";\nimport { hoverContext, selectContext } from \"./contexts\";\n\nexport function Hover({ children }: JSX.IntrinsicElements[\"group\"]) {\n  const setHover = useContext(hoverContext);\n  const selected = useContext(selectContext);\n\n  const onPointerOver = useCallback(\n    (e) => {\n      setHover((state: any) => {\n        return selected.includes(e.object) ? [] : [...state, e.object];\n      });\n    },\n    [selected]\n  );\n\n  const onPointerOut = useCallback((e) => {\n    setHover([]);\n  }, []);\n\n  return (\n    <group onPointerOver={onPointerOver} onPointerOut={onPointerOut}>\n      {children}\n    </group>\n  );\n}\n","import * as THREE from \"three\";\nimport { Select } from \"@react-three/drei\";\nimport {\n  extend,\n  ReactThreeFiber,\n  useFrame,\n  useThree,\n} from \"@react-three/fiber\";\nimport * as React from \"react\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport { OutlinePass } from \"three/examples/jsm/postprocessing/OutlinePass\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\nimport { Measurements } from \"./Measure\";\nimport { MultiObjectBoundingBox } from \"./measureUtils\";\nimport { Hover } from \"./Hover\";\nimport { hoverContext, selectContext } from \"./contexts\";\n\nextend({\n  EffectComposer,\n  RenderPass,\n  OutlinePass,\n});\n\nexport interface Measure {\n  selected: THREE.Mesh[];\n  hovered: THREE.Mesh[];\n}\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      outlinePass: ReactThreeFiber.Object3DNode<\n        OutlinePass,\n        typeof OutlinePass\n      >;\n    }\n  }\n}\n\nexport function QuickMeasure({\n  children: _children,\n  ...props\n}: ReactThreeFiber.Object3DNode<THREE.Object3D, THREE.Object3D>) {\n  const composer = useRef(null);\n  const { scene, gl, size, camera } = useThree();\n  const aspect = useMemo(() => new THREE.Vector2(1024, 1024), []);\n  const [hovered, setHover] = useState([]);\n  const [selected, setSelected] = useState([]);\n\n  useEffect(() => {\n    if (composer.current) {\n      composer.current.setSize(size.width, size.height);\n    }\n  }, [size]);\n\n  useFrame(() => {\n    if (composer.current) {\n      composer.current.render();\n    }\n    if (selected.length > 0) {\n      setSelected((state: any) => [...state]);\n    }\n  }, 1);\n\n  return (\n    <hoverContext.Provider value={setHover}>\n      <selectContext.Provider value={selected}>\n        <Select\n          box\n          multiple\n          onChange={(selectedObjs) => {\n            setHover([]);\n            setSelected(selectedObjs);\n          }}\n        >\n          <Hover>{_children}</Hover>\n        </Select>\n\n        <MultiObjectBoundingBox multiSelected={selected} />\n        <Measurements selected={selected} hovered={hovered} />\n        <effectComposer ref={composer} args={[gl]}>\n          <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n          <outlinePass\n            attachArray=\"passes\"\n            args={[aspect, scene, camera]}\n            selectedObjects={hovered}\n            visibleEdgeColor={new THREE.Color(0x0474ba)}\n          />\n          <outlinePass\n            attachArray=\"passes\"\n            args={[aspect, scene, camera]}\n            selectedObjects={selected}\n            visibleEdgeColor={new THREE.Color(0xffffff)}\n            edgeStrength={10}\n            edgeThickness={0.25}\n          />\n        </effectComposer>\n      </selectContext.Provider>\n    </hoverContext.Provider>\n  );\n}\n"],"names":["getMidPoint","points","midPoint","THREE","Vector3","x","y","z","getBoundingBox","multiSelected","boundingBox","Box3","group","Group","clones","forEach","obj3D","clone","push","add","setFromObject","MultiObjectBoundingBox","length","React","box","args","Color","getClosestMainAxisPoint","selected","hovered","selectedBoundingBox","hoveredBoundingBox","axis","position","max","min","getClosestPointToSelected","multiSelectBoundingBox","goal","reduce","prev","curr","Math","abs","getCrossAxisEndPoint","Measurements","props","geometry","computeBoundingBox","applyMatrix4","matrixWorld","mainXStart","mainXEnd","mainYStart","mainYEnd","mainZStart","mainZEnd","mainX","mainY","mainZ","crossX","crossY","Line","color","lineWidth","dashed","dashScale","alphaWrite","undefined","Html","as","wrapperClass","zIndexRange","center","transform","sprite","round","hoverContext","createContext","selectContext","Hover","children","setHover","useContext","onPointerOver","useCallback","e","state","includes","object","onPointerOut","extend","EffectComposer","RenderPass","OutlinePass","_children","composer","useRef","useThree","scene","gl","size","camera","aspect","useMemo","Vector2","useState","setSelected","useEffect","current","setSize","width","height","useFrame","render","Provider","value","Select","multiple","onChange","selectedObjs","ref","attachArray","selectedObjects","visibleEdgeColor","edgeStrength","edgeThickness"],"mappings":"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"}