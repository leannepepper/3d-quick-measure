/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cone_cell: THREE.Mesh;
    Cone_cell001: THREE.Mesh;
    Cone_cell002: THREE.Mesh;
    Cone_cell003: THREE.Mesh;
    Cone_cell004: THREE.Mesh;
    Plane: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
  };
};

type ActionName =
  | "Cone_cellAction"
  | "Cone_cell.001Action"
  | "Cone_cell.002Action"
  | "Cone_cell.003Action"
  | "Cone_cell.004Action";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Triangle({
  visible,
  ...props
}: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/models/triangleAnimation.gltf"
  ) as GLTFResult;
  const { actions } = useAnimations<any>(animations, group);

  useEffect(() => {
    if (visible)
      Object.keys(actions).forEach((key) => {
        console.log(actions[key]);
        actions[key].repetitions = 0;
        actions[key].clampWhenFinished = true;
        actions[key].play();
      });
  }, [visible]);

  return (
    <group ref={group} {...props} dispose={null} rotation={[0.2, 0, 0]}>
      <mesh
        name="Cone_cell"
        geometry={nodes.Cone_cell.geometry}
        material={nodes.Cone_cell.material}
        position={[-0.02, -0.07, -0.94]}
      />
      <mesh
        name="Cone_cell001"
        geometry={nodes.Cone_cell001.geometry}
        material={nodes.Cone_cell001.material}
        position={[0.99, -0.02, 0.59]}
      />
      <mesh
        name="Cone_cell002"
        geometry={nodes.Cone_cell002.geometry}
        material={nodes.Cone_cell002.material}
        position={[-0.91, 0, 0.62]}
      />
      <mesh
        name="Cone_cell003"
        geometry={nodes.Cone_cell003.geometry}
        material={nodes.Cone_cell003.material}
        position={[0.02, 2.07, -0.01]}
      />
      <mesh
        name="Cone_cell004"
        geometry={nodes.Cone_cell004.geometry}
        material={nodes.Cone_cell004.material}
        position={[0.23, -0.25, 0.67]}
      />
      {/* <mesh
        geometry={planeGeometry}
        material={planeMaterial}
        position={[0, -7.45, 0]}
        scale={8.1}
      /> */}
    </group>
  );
}

useGLTF.preload("/models/triangleAnimation.gltf");
