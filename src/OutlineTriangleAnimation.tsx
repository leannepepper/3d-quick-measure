/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh;
    Plane001: THREE.Mesh;
    Cone_cell: THREE.Mesh;
    Cone_cell001: THREE.Mesh;
    Cone_cell002: THREE.Mesh;
    Cone_cell003: THREE.Mesh;
    Cone_cell004: THREE.Mesh;
    Cone_cell005: THREE.Mesh;
  };
  materials: {
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
  };
};

type ActionName =
  | "Cone_cellAction"
  | "Cone_cell.001Action"
  | "Cone_cell.002Action"
  | "Cone_cell.003Action"
  | "Cone_cell.004Action"
  | "Cone_cell.005Action";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function TriangleAnimation({
  ...props
}: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/models/outlineTriangleAnimation.glb"
  ) as GLTFResult;
  // const { actions } = useAnimations<GLTFActions>(animations, group)
  const { actions } = useAnimations<any>(animations, group);

  useEffect(() => {
    Object.keys(actions).forEach((key) => {
      actions[key].play();
    });
  }, []);
  return (
    <group ref={group} {...props} dispose={null} rotation={[0, -1.5, 0]}>
      <mesh
        geometry={nodes.Plane.geometry}
        material={materials["Material.002"]}
        rotation={[0.39, 0.05, -0.17]}
        scale={4.02}
      />
      <mesh
        geometry={nodes.Plane001.geometry}
        material={materials["Material.003"]}
        position={[0, -6.86, 10.23]}
        scale={8.91}
      />
      <mesh
        name="Cone_cell"
        geometry={nodes.Cone_cell.geometry}
        material={nodes.Cone_cell.material}
        position={[0.03, 5.93, -0.76]}
      />
      <mesh
        name="Cone_cell001"
        geometry={nodes.Cone_cell001.geometry}
        material={nodes.Cone_cell001.material}
        position={[0.78, 5.85, 0.44]}
      />
      <mesh
        name="Cone_cell002"
        geometry={nodes.Cone_cell002.geometry}
        material={nodes.Cone_cell002.material}
        position={[-0.66, 5.83, 0.43]}
      />
      <mesh
        name="Cone_cell003"
        geometry={nodes.Cone_cell003.geometry}
        material={nodes.Cone_cell003.material}
        position={[0.03, 7.26, 0.04]}
      />
      <mesh
        name="Cone_cell004"
        geometry={nodes.Cone_cell004.geometry}
        material={nodes.Cone_cell004.material}
        position={[-0.45, 6.75, 0.25]}
      />
      <mesh
        name="Cone_cell005"
        geometry={nodes.Cone_cell005.geometry}
        material={nodes.Cone_cell005.material}
        position={[0.53, 6.56, 0.27]}
      />
    </group>
  );
}

useGLTF.preload("/models/outlineTriangleAnimation.glb");
